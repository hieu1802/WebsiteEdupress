{"ast":null,"code":"var _jsxFileName = \"D:\\\\MindX\\\\Khoa2\\\\project\\\\WebsiteEdupress\\\\my-app\\\\src\\\\Components\\\\LostPass\\\\LostPass.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"../Modal/Modal.jsx\";\nimport \"./LostPass.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LostPass() {\n  _s();\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const [modal, setModal] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\"\n  });\n  const navigate = useNavigate();\n  const handleLostPass = e => {\n    e.preventDefault();\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n    const accountExists = existingAccounts.some(account => account.username === usernameOrEmail || account.email === usernameOrEmail);\n    if (accountExists) {\n      setIsVerified(true);\n    } else {\n      setModal({\n        isOpen: true,\n        title: \"Error\",\n        message: \"Account not found\"\n      });\n    }\n  };\n  const handleResetPassword = (newPassword, confirmPassword) => {\n    if (newPassword !== confirmPassword) {\n      setModal({\n        isOpen: true,\n        title: \"Error\",\n        message: \"Passwords do not match\"\n      });\n      return;\n    }\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n    const updatedAccounts = existingAccounts.map(account => {\n      if (account.username === usernameOrEmail || account.email === usernameOrEmail) {\n        return {\n          ...account,\n          password: newPassword\n        };\n      }\n      return account;\n    });\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\n    setModal({\n      isOpen: true,\n      title: \"Success\",\n      message: \"Password reset successful!\"\n    });\n    setTimeout(() => {\n      navigate(\"/\");\n    }, 2000);\n    setUsernameOrEmail(\"\");\n    setIsVerified(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isVerified ? /*#__PURE__*/_jsxDEV(ResetPassword, {\n      onReset: handleResetPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lostPass\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lost Your Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLostPass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"usernameOrEmail\",\n            name: \"usernameOrEmail\",\n            placeholder: \"Enter your Email or Username*\",\n            value: usernameOrEmail,\n            onChange: e => setUsernameOrEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Get New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal.isOpen,\n      onClose: () => setModal({\n        isOpen: false,\n        title: \"\",\n        message: \"\"\n      }),\n      title: modal.title,\n      message: modal.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(LostPass, \"6xiVGxNPuDcUalopr6KA4reIy34=\", false, function () {\n  return [useNavigate];\n});\n_c = LostPass;\nfunction ResetPassword({\n  onReset\n}) {\n  _s2();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    onReset(newPassword, confirmPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetPassword\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          name: \"newPassword\",\n          placeholder: \"New Password*\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password*\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s2(ResetPassword, \"7t7qLBoBHt3jW+hLc45Mtb6UjMA=\");\n_c2 = ResetPassword;\nexport default LostPass;\nvar _c, _c2;\n$RefreshReg$(_c, \"LostPass\");\n$RefreshReg$(_c2, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Modal","useNavigate","jsxDEV","_jsxDEV","LostPass","_s","usernameOrEmail","setUsernameOrEmail","isVerified","setIsVerified","modal","setModal","isOpen","title","message","navigate","handleLostPass","e","preventDefault","existingAccounts","JSON","parse","localStorage","getItem","accountExists","some","account","username","email","handleResetPassword","newPassword","confirmPassword","updatedAccounts","map","password","setItem","stringify","setTimeout","children","ResetPassword","onReset","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","id","name","placeholder","value","onChange","target","required","onClose","_c","_s2","setNewPassword","setConfirmPassword","handleSubmit","_c2","$RefreshReg$"],"sources":["D:/MindX/Khoa2/project/WebsiteEdupress/my-app/src/Components/LostPass/LostPass.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"../Modal/Modal.jsx\";\r\nimport \"./LostPass.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LostPass() {\r\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [modal, setModal] = useState({ isOpen: false, title: \"\", message: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleLostPass = (e) => {\r\n    e.preventDefault();\r\n\r\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\r\n\r\n    const accountExists = existingAccounts.some(\r\n      (account) =>\r\n        account.username === usernameOrEmail ||\r\n        account.email === usernameOrEmail\r\n    );\r\n\r\n    if (accountExists) {\r\n      setIsVerified(true);\r\n    } else {\r\n      setModal({ isOpen: true, title: \"Error\", message: \"Account not found\" });\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = (newPassword, confirmPassword) => {\r\n    if (newPassword !== confirmPassword) {\r\n      setModal({\r\n        isOpen: true,\r\n        title: \"Error\",\r\n        message: \"Passwords do not match\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\r\n    const updatedAccounts = existingAccounts.map((account) => {\r\n      if (\r\n        account.username === usernameOrEmail ||\r\n        account.email === usernameOrEmail\r\n      ) {\r\n        return { ...account, password: newPassword };\r\n      }\r\n      return account;\r\n    });\r\n\r\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\r\n    setModal({\r\n      isOpen: true,\r\n      title: \"Success\",\r\n      message: \"Password reset successful!\",\r\n    });\r\n\r\n    setTimeout(() => {\r\n      navigate(\"/\");\r\n    }, 2000);\r\n\r\n    setUsernameOrEmail(\"\");\r\n    setIsVerified(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isVerified ? (\r\n        <ResetPassword onReset={handleResetPassword} />\r\n      ) : (\r\n        <div className=\"lostPass\">\r\n          <h1>Lost Your Password?</h1>\r\n          <form onSubmit={handleLostPass}>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"usernameOrEmail\"\r\n                name=\"usernameOrEmail\"\r\n                placeholder=\"Enter your Email or Username*\"\r\n                value={usernameOrEmail}\r\n                onChange={(e) => setUsernameOrEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Get New Password</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        isOpen={modal.isOpen}\r\n        onClose={() => setModal({ isOpen: false, title: \"\", message: \"\" })}\r\n        title={modal.title}\r\n        message={modal.message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ResetPassword({ onReset }) {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onReset(newPassword, confirmPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"resetPassword\">\r\n      <h1>Reset Your Password</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            name=\"newPassword\"\r\n            placeholder=\"New Password*\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password*\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LostPass;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\MindX\\\\Khoa2\\\\project\\\\WebsiteEdupress\\\\my-app\\\\src\\\\Components\\\\LostPass\\\\LostPass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Modal from \"../Modal/Modal\";\nimport \"./LostPass.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LostPass() {\n  _s();\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\n  const [modal, setModal] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\"\n  });\n  const navigate = useNavigate();\n  const handleLostPass = e => {\n    e.preventDefault();\n\n    // Get existing accounts from localStorage\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n\n    // Check if the username or email exists\n    const accountExists = existingAccounts.some(account => account.username === usernameOrEmail || account.email === usernameOrEmail);\n    if (accountExists) {\n      // Navigate to the reset password page\n      navigate(\"/resetPassword\", {\n        state: {\n          usernameOrEmail\n        }\n      });\n    } else {\n      // Show error if username or email does not exist\n      setModal({\n        isOpen: true,\n        title: \"Error\",\n        message: \"Account not found\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lostPass\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lost Your Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLostPass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"usernameOrEmail\",\n            name: \"usernameOrEmail\",\n            placeholder: \"Enter your Email or Username*\",\n            value: usernameOrEmail,\n            onChange: e => setUsernameOrEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Get New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal.isOpen,\n      onClose: () => setModal({\n        isOpen: false,\n        title: \"\",\n        message: \"\"\n      }),\n      title: modal.title,\n      message: modal.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(LostPass, \"KkbgOkGzZ3FtUBbu5Ejbe2ttMxA=\", false, function () {\n  return [useNavigate];\n});\n_c = LostPass;\nexport default LostPass;\nvar _c;\n$RefreshReg$(_c, \"LostPass\");","map":{"version":3,"names":["React","useState","useNavigate","Modal","jsxDEV","_jsxDEV","LostPass","_s","usernameOrEmail","setUsernameOrEmail","modal","setModal","isOpen","title","message","navigate","handleLostPass","e","preventDefault","existingAccounts","JSON","parse","localStorage","getItem","accountExists","some","account","username","email","state","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","placeholder","value","onChange","target","required","onClose","_c","$RefreshReg$"],"sources":["D:/MindX/Khoa2/project/WebsiteEdupress/my-app/src/Components/LostPass/LostPass.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./LostPass.css\";\r\n\r\nfunction LostPass() {\r\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\r\n  const [modal, setModal] = useState({ isOpen: false, title: \"\", message: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleLostPass = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Get existing accounts from localStorage\r\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\r\n\r\n    // Check if the username or email exists\r\n    const accountExists = existingAccounts.some(\r\n      (account) =>\r\n        account.username === usernameOrEmail ||\r\n        account.email === usernameOrEmail\r\n    );\r\n\r\n    if (accountExists) {\r\n      // Navigate to the reset password page\r\n      navigate(\"/resetPassword\", { state: { usernameOrEmail } });\r\n    } else {\r\n      // Show error if username or email does not exist\r\n      setModal({ isOpen: true, title: \"Error\", message: \"Account not found\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"lostPass\">\r\n        <h1>Lost Your Password?</h1>\r\n        <form onSubmit={handleLostPass}>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"usernameOrEmail\"\r\n              name=\"usernameOrEmail\"\r\n              placeholder=\"Enter your Email or Username*\"\r\n              value={usernameOrEmail}\r\n              onChange={(e) => setUsernameOrEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Get New Password</button>\r\n        </form>\r\n      </div>\r\n      <Modal\r\n        isOpen={modal.isOpen}\r\n        onClose={() => setModal({ isOpen: false, title: \"\", message: \"\" })}\r\n        title={modal.title}\r\n        message={modal.message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LostPass;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
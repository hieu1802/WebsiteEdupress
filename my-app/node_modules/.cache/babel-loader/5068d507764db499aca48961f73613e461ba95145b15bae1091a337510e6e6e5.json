{"ast":null,"code":"var _jsxFileName = \"D:\\\\MindX\\\\Khoa2\\\\project\\\\WebsiteEdupress\\\\my-app\\\\src\\\\Components\\\\LostPass\\\\LostPass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./LostPass.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LostPass() {\n  _s();\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const handleLostPass = e => {\n    e.preventDefault();\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n    const accountExists = existingAccounts.some(account => account.username === usernameOrEmail || account.email === usernameOrEmail);\n    if (accountExists) {\n      setIsVerified(true);\n    } else {\n      alert(\"Account not found\");\n    }\n  };\n  const handleResetPassword = (newPassword, confirmPassword) => {\n    if (newPassword === confirmPassword) {\n      const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n      const updatedAccounts = existingAccounts.map(account => {\n        if (account.username === usernameOrEmail || account.email === usernameOrEmail) {\n          return {\n            ...account,\n            password: newPassword\n          };\n        }\n        return account;\n      });\n      localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\n      alert(\"Password reset successful!\");\n    } else {\n      alert(\"Passwords do not match\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isVerified ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lostPass\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lost Your Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLostPass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"usernameOrEmail\",\n            name: \"usernameOrEmail\",\n            placeholder: \"Enter your Email or Username*\",\n            value: usernameOrEmail,\n            onChange: e => setUsernameOrEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Get New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetPassword\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"backButton\",\n        onClick: () => setIsVerified(false),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleResetPassword(e.target.newPassword.value, e.target.confirmPassword.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            name: \"newPassword\",\n            placeholder: \"New Password*\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            placeholder: \"Confirm Password*\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(LostPass, \"zrUGaDkrViIY2qpfPJoVXssGQqw=\");\n_c = LostPass;\nexport default LostPass;\nvar _c;\n$RefreshReg$(_c, \"LostPass\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LostPass","_s","usernameOrEmail","setUsernameOrEmail","isVerified","setIsVerified","handleLostPass","e","preventDefault","existingAccounts","JSON","parse","localStorage","getItem","accountExists","some","account","username","email","alert","handleResetPassword","newPassword","confirmPassword","updatedAccounts","map","password","setItem","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["D:/MindX/Khoa2/project/WebsiteEdupress/my-app/src/Components/LostPass/LostPass.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./LostPass.css\";\r\n\r\nfunction LostPass() {\r\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\r\n  const [isVerified, setIsVerified] = useState(false);\r\n\r\n  const handleLostPass = (e) => {\r\n    e.preventDefault();\r\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\r\n    const accountExists = existingAccounts.some(\r\n      (account) =>\r\n        account.username === usernameOrEmail ||\r\n        account.email === usernameOrEmail\r\n    );\r\n\r\n    if (accountExists) {\r\n      setIsVerified(true);\r\n    } else {\r\n      alert(\"Account not found\");\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = (newPassword, confirmPassword) => {\r\n    if (newPassword === confirmPassword) {\r\n      const existingAccounts =\r\n        JSON.parse(localStorage.getItem(\"accounts\")) || [];\r\n      const updatedAccounts = existingAccounts.map((account) => {\r\n        if (\r\n          account.username === usernameOrEmail ||\r\n          account.email === usernameOrEmail\r\n        ) {\r\n          return { ...account, password: newPassword };\r\n        }\r\n        return account;\r\n      });\r\n      localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\r\n      alert(\"Password reset successful!\");\r\n    } else {\r\n      alert(\"Passwords do not match\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isVerified ? (\r\n        <div className=\"lostPass\">\r\n          <h1>Lost Your Password?</h1>\r\n          <form onSubmit={handleLostPass}>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"usernameOrEmail\"\r\n                name=\"usernameOrEmail\"\r\n                placeholder=\"Enter your Email or Username*\"\r\n                value={usernameOrEmail}\r\n                onChange={(e) => setUsernameOrEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Get New Password</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className=\"resetPassword\">\r\n          <h1>Reset Your Password</h1>\r\n          <button className=\"backButton\" onClick={() => setIsVerified(false)}>\r\n            ‚Üê Back\r\n          </button>\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleResetPassword(\r\n                e.target.newPassword.value,\r\n                e.target.confirmPassword.value\r\n              );\r\n            }}\r\n          >\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                name=\"newPassword\"\r\n                placeholder=\"New Password*\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                placeholder=\"Confirm Password*\"\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Reset Password</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LostPass;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
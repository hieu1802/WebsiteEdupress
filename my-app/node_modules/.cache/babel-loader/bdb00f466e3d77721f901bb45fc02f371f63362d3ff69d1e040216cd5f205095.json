{"ast":null,"code":"var _jsxFileName = \"D:\\\\MindX\\\\Khoa2\\\\project\\\\WebsiteEdupress\\\\my-app\\\\src\\\\Components\\\\Register\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Register.css\";\nimport Modal from \"../Modal/Modal.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [error, setError] = useState(\"\");\n  // const [success, setSuccess] = useState(\"\");\n  const [modal, setModal] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\"\n  });\n  const handleRegister = e => {\n    e.preventDefault();\n    if (!email.includes(\"@\")) {\n      setModal({\n        isOpen: true,\n        title: \"Error\",\n        message: \"Please enter a valid email address\"\n      });\n      return;\n    }\n    if (password !== confirmPassword) {\n      setModal({\n        isOpen: true,\n        title: \"Error\",\n        message: \"Passwords do not match\"\n      });\n      return;\n    }\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n    const accountExists = existingAccounts.some(account => account.username === username || account.email === email);\n    if (accountExists) {\n      setModal({\n        isOpen: true,\n        title: \"Error\",\n        message: \"Username or email already taken\"\n      });\n      return;\n    }\n    const role = username.includes(\"admin\") ? \"admin\" : \"user\";\n    const newAccount = {\n      email,\n      username,\n      password,\n      role\n    };\n    localStorage.setItem(\"accounts\", JSON.stringify([...existingAccounts, newAccount]));\n    setModal({\n      isOpen: true,\n      title: \"Success\",\n      message: \"Registration successful!\"\n    });\n    setTimeout(() => {\n      navigate(\"/login\");\n    }, 2000);\n    setEmail(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Email*\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            placeholder: \"Username*\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Password*\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            placeholder: \"Confirm Password*\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal.isOpen,\n      onClose: () => setModal({\n        isOpen: false,\n        title: \"\",\n        message: \"\"\n      }),\n      title: modal.title,\n      message: modal.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"9vV/ZZmFUlogXBkYD73YFiU6k9E=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Register","_s","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","modal","setModal","isOpen","title","message","handleRegister","e","preventDefault","includes","existingAccounts","JSON","parse","localStorage","getItem","accountExists","some","account","role","newAccount","setItem","stringify","setTimeout","navigate","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","class","type","id","name","placeholder","value","onChange","target","required","onClose","_c","$RefreshReg$"],"sources":["D:/MindX/Khoa2/project/WebsiteEdupress/my-app/src/Components/Register/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Register.css\";\r\nimport Modal from \"../Modal/Modal.jsx\";\r\n\r\nfunction Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  // const [error, setError] = useState(\"\");\r\n  // const [success, setSuccess] = useState(\"\");\r\n  const [modal, setModal] = useState({\r\n    isOpen: false,\r\n    title: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email.includes(\"@\")) {\r\n      setModal({\r\n        isOpen: true,\r\n        title: \"Error\",\r\n        message: \"Please enter a valid email address\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setModal({\r\n        isOpen: true,\r\n        title: \"Error\",\r\n        message: \"Passwords do not match\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\r\n\r\n    const accountExists = existingAccounts.some(\r\n      (account) => account.username === username || account.email === email\r\n    );\r\n\r\n    if (accountExists) {\r\n      setModal({\r\n        isOpen: true,\r\n        title: \"Error\",\r\n        message: \"Username or email already taken\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const role = username.includes(\"admin\") ? \"admin\" : \"user\";\r\n\r\n    const newAccount = { email, username, password, role };\r\n    localStorage.setItem(\r\n      \"accounts\",\r\n      JSON.stringify([...existingAccounts, newAccount])\r\n    );\r\n\r\n    setModal({\r\n      isOpen: true,\r\n      title: \"Success\",\r\n      message: \"Registration successful!\",\r\n    });\r\n\r\n    setTimeout(() => {\r\n      navigate(\"/login\");\r\n    }, 2000);\r\n\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"register\">\r\n        <h1>Register</h1>\r\n        <form onSubmit={handleRegister}>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email*\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder=\"Username*\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password*\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password*\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n      </div>\r\n      <Modal\r\n        isOpen={modal.isOpen}\r\n        onClose={() => setModal({ isOpen: false, title: \"\", message: \"\" })}\r\n        title={modal.title}\r\n        message={modal.message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
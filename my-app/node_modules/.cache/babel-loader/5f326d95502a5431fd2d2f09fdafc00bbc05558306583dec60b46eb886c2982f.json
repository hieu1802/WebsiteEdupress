{"ast":null,"code":"var _jsxFileName = \"D:\\\\MindX\\\\Khoa2\\\\project\\\\WebsiteEdupress\\\\my-app\\\\src\\\\Components\\\\ResetPassword\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\n// ResetPassword.jsx\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Modal from \"../Modal/Modal\";\nimport \"./ResetPassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [modal, setModal] = useState({\n    isOpen: false,\n    title: \"\",\n    message: \"\"\n  });\n  const handleResetPassword = e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setModal({\n        isOpen: true,\n        title: \"Error\",\n        message: \"Passwords do not match\"\n      });\n      return;\n    }\n\n    // Get existing accounts from localStorage\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n    const updatedAccounts = existingAccounts.map(account => {\n      if (account.username === location.state.usernameOrEmail || account.email === location.state.usernameOrEmail) {\n        return {\n          ...account,\n          password: newPassword\n        };\n      }\n      return account;\n    });\n\n    // Save updated accounts to localStorage\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\n    setModal({\n      isOpen: true,\n      title: \"Success\",\n      message: \"Password reset successful!\"\n    });\n\n    // Navigate back to login page\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetPassword\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleResetPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            name: \"newPassword\",\n            placeholder: \"New Password*\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            placeholder: \"Confirm Password*\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal.isOpen,\n      onClose: () => setModal({\n        isOpen: false,\n        title: \"\",\n        message: \"\"\n      }),\n      title: modal.title,\n      message: modal.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"2DZz38b92CBgUeJ9G3Yn5obYlm4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","Modal","jsxDEV","_jsxDEV","ResetPassword","_s","location","navigate","newPassword","setNewPassword","confirmPassword","setConfirmPassword","modal","setModal","isOpen","title","message","handleResetPassword","e","preventDefault","existingAccounts","JSON","parse","localStorage","getItem","updatedAccounts","map","account","username","state","usernameOrEmail","email","password","setItem","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","placeholder","value","onChange","target","required","onClose","_c","$RefreshReg$"],"sources":["D:/MindX/Khoa2/project/WebsiteEdupress/my-app/src/Components/ResetPassword/ResetPassword.jsx"],"sourcesContent":["// ResetPassword.jsx\r\nimport React, { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./ResetPassword.css\";\r\n\r\nfunction ResetPassword() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [modal, setModal] = useState({ isOpen: false, title: \"\", message: \"\" });\r\n\r\n  const handleResetPassword = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setModal({\r\n        isOpen: true,\r\n        title: \"Error\",\r\n        message: \"Passwords do not match\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Get existing accounts from localStorage\r\n    const existingAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\r\n    const updatedAccounts = existingAccounts.map((account) => {\r\n      if (\r\n        account.username === location.state.usernameOrEmail ||\r\n        account.email === location.state.usernameOrEmail\r\n      ) {\r\n        return { ...account, password: newPassword };\r\n      }\r\n      return account;\r\n    });\r\n\r\n    // Save updated accounts to localStorage\r\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\r\n    setModal({\r\n      isOpen: true,\r\n      title: \"Success\",\r\n      message: \"Password reset successful!\",\r\n    });\r\n\r\n    // Navigate back to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"resetPassword\">\r\n        <h1>Reset Your Password</h1>\r\n        <form onSubmit={handleResetPassword}>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              placeholder=\"New Password*\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm Password*\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Reset Password</button>\r\n        </form>\r\n      </div>\r\n      <Modal\r\n        isOpen={modal.isOpen}\r\n        onClose={() => setModal({ isOpen: false, title: \"\", message: \"\" })}\r\n        title={modal.title}\r\n        message={modal.message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\MindX\\\\Khoa2\\\\project\\\\WebsiteEdupress\\\\my-app\\\\src\\\\Components\\\\AdminPage\\\\AdminPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [newAccount, setNewAccount] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    role: \"user\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [editingAccount, setEditingAccount] = useState(null);\n  useEffect(() => {\n    const storedAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\n    const adminAccountExists = storedAccounts.some(account => account.username === \"admin\");\n    if (!adminAccountExists) {\n      const adminAccount = {\n        email: \"admin@example.com\",\n        username: \"admin\",\n        password: \"admin\",\n        role: \"admin\"\n      };\n      storedAccounts.push(adminAccount);\n      localStorage.setItem(\"accounts\", JSON.stringify(storedAccounts));\n    }\n    setAccounts(storedAccounts);\n  }, []);\n  const handleAddAccount = () => {\n    const updatedAccounts = [...accounts, newAccount];\n    setAccounts(updatedAccounts);\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\n    setNewAccount({\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      role: \"user\"\n    });\n  };\n  const handleDeleteAccount = username => {\n    if (username === \"admin\") {\n      alert(\"Cannot delete the admin account\");\n      return;\n    }\n    const updatedAccounts = accounts.filter(account => account.username !== username);\n    setAccounts(updatedAccounts);\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\n  };\n  const handleUpdateAccount = () => {\n    const isDuplicateUsername = accounts.some(account => account.username === editingAccount.username && account.username !== editingAccount.originalUsername);\n    const updatedAccounts = accounts.map(account => account.username === editingAccount.originalUsername ? editingAccount : account);\n    setAccounts(updatedAccounts);\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\n    setEditingAccount(null);\n  };\n  const handleRoleChange = (username, role) => {\n    if (username === \"admin\") {\n      alert(\"Cannot change the role of the admin account\");\n      return;\n    }\n    const updatedAccounts = accounts.map(account => account.username === username ? {\n      ...account,\n      role\n    } : account);\n    setAccounts(updatedAccounts);\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Registered Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"listAcc\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: account.role,\n              onChange: e => handleRoleChange(account.username, e.target.value),\n              disabled: account.username === \"admin\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingAccount({\n                ...account,\n                originalUsername: account.username\n              }),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteAccount(account.username),\n              disabled: account.username === \"admin\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, account.username, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: editingAccount ? \"Edit Account\" : \"Add New Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        editingAccount ? handleUpdateAccount() : handleAddAccount();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: editingAccount ? editingAccount.email : newAccount.email,\n        onChange: e => editingAccount ? setEditingAccount({\n          ...editingAccount,\n          email: e.target.value\n        }) : setNewAccount({\n          ...newAccount,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: editingAccount ? editingAccount.username : newAccount.username,\n        onChange: e => editingAccount ? setEditingAccount({\n          ...editingAccount,\n          username: e.target.value\n        }) : setNewAccount({\n          ...newAccount,\n          username: e.target.value\n        }),\n        required: true,\n        disabled: editingAccount && editingAccount.username === \"admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          placeholder: \"Password\",\n          value: editingAccount ? editingAccount.password : newAccount.password,\n          onChange: e => editingAccount ? setEditingAccount({\n            ...editingAccount,\n            password: e.target.value\n          }) : setNewAccount({\n            ...newAccount,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle-password-visibility\",\n          onClick: () => setShowPassword(!showPassword),\n          children: showPassword ? /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M1 1l22 22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M17.94 17.94A10.94 10.94 0 0 1 12 21C6.48 21 2 16.5 2 12c0-1.39.28-2.73.78-3.94M3.51 3.51C4.72 2.28 6.27 1.51 8 1.51c2.9 0 5.67 1.68 7.93 4.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"12\",\n              r: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 12c0 4.418-4.477 8-10 8S2 16.418 2 12 6.477 4 12 4s10 3.582 10 8z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingAccount ? \"Update Account\" : \"Add Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), editingAccount && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setEditingAccount(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"xpMtCxunfkrMQWD5lzeZMFaOJnE=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminPage","_s","accounts","setAccounts","newAccount","setNewAccount","email","username","password","role","showPassword","setShowPassword","editingAccount","setEditingAccount","storedAccounts","JSON","parse","localStorage","getItem","adminAccountExists","some","account","adminAccount","push","setItem","stringify","handleAddAccount","updatedAccounts","handleDeleteAccount","alert","filter","handleUpdateAccount","isDuplicateUsername","originalUsername","map","handleRoleChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","onClick","onSubmit","preventDefault","type","placeholder","required","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","_c","$RefreshReg$"],"sources":["D:/MindX/Khoa2/project/WebsiteEdupress/my-app/src/Components/AdminPage/AdminPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage() {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [newAccount, setNewAccount] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    role: \"user\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [editingAccount, setEditingAccount] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedAccounts = JSON.parse(localStorage.getItem(\"accounts\")) || [];\r\n\r\n    const adminAccountExists = storedAccounts.some(\r\n      (account) => account.username === \"admin\"\r\n    );\r\n\r\n    if (!adminAccountExists) {\r\n      const adminAccount = {\r\n        email: \"admin@example.com\",\r\n        username: \"admin\",\r\n        password: \"admin\",\r\n        role: \"admin\",\r\n      };\r\n      storedAccounts.push(adminAccount);\r\n      localStorage.setItem(\"accounts\", JSON.stringify(storedAccounts));\r\n    }\r\n\r\n    setAccounts(storedAccounts);\r\n  }, []);\r\n\r\n  const handleAddAccount = () => {\r\n    const updatedAccounts = [...accounts, newAccount];\r\n    setAccounts(updatedAccounts);\r\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\r\n    setNewAccount({ email: \"\", username: \"\", password: \"\", role: \"user\" });\r\n  };\r\n\r\n  const handleDeleteAccount = (username) => {\r\n    if (username === \"admin\") {\r\n      alert(\"Cannot delete the admin account\");\r\n      return;\r\n    }\r\n    const updatedAccounts = accounts.filter(\r\n      (account) => account.username !== username\r\n    );\r\n    setAccounts(updatedAccounts);\r\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\r\n  };\r\n\r\n  const handleUpdateAccount = () => {\r\n    const isDuplicateUsername = accounts.some(\r\n      (account) =>\r\n        account.username === editingAccount.username &&\r\n        account.username !== editingAccount.originalUsername\r\n    );\r\n\r\n    const updatedAccounts = accounts.map((account) =>\r\n      account.username === editingAccount.originalUsername\r\n        ? editingAccount\r\n        : account\r\n    );\r\n\r\n    setAccounts(updatedAccounts);\r\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\r\n    setEditingAccount(null);\r\n  };\r\n\r\n  const handleRoleChange = (username, role) => {\r\n    if (username === \"admin\") {\r\n      alert(\"Cannot change the role of the admin account\");\r\n      return;\r\n    }\r\n    const updatedAccounts = accounts.map((account) =>\r\n      account.username === username ? { ...account, role } : account\r\n    );\r\n    setAccounts(updatedAccounts);\r\n    localStorage.setItem(\"accounts\", JSON.stringify(updatedAccounts));\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <h1>Admin Page</h1>\r\n\r\n      <h2>All Registered Accounts</h2>\r\n      <table className=\"listAcc\">\r\n        <thead>\r\n          <tr>\r\n            <th>Email</th>\r\n            <th>Username</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {accounts.map((account) => (\r\n            <tr key={account.username}>\r\n              <td>{account.email}</td>\r\n              <td>{account.username}</td>\r\n              <td>\r\n                <select\r\n                  value={account.role}\r\n                  onChange={(e) =>\r\n                    handleRoleChange(account.username, e.target.value)\r\n                  }\r\n                  disabled={account.username === \"admin\"}\r\n                >\r\n                  <option value=\"user\">User</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={() =>\r\n                    setEditingAccount({\r\n                      ...account,\r\n                      originalUsername: account.username,\r\n                    })\r\n                  }\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDeleteAccount(account.username)}\r\n                  disabled={account.username === \"admin\"}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h2>{editingAccount ? \"Edit Account\" : \"Add New Account\"}</h2>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          editingAccount ? handleUpdateAccount() : handleAddAccount();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          value={editingAccount ? editingAccount.email : newAccount.email}\r\n          onChange={(e) =>\r\n            editingAccount\r\n              ? setEditingAccount({ ...editingAccount, email: e.target.value })\r\n              : setNewAccount({ ...newAccount, email: e.target.value })\r\n          }\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={editingAccount ? editingAccount.username : newAccount.username}\r\n          onChange={(e) =>\r\n            editingAccount\r\n              ? setEditingAccount({\r\n                  ...editingAccount,\r\n                  username: e.target.value,\r\n                })\r\n              : setNewAccount({ ...newAccount, username: e.target.value })\r\n          }\r\n          required\r\n          disabled={editingAccount && editingAccount.username === \"admin\"}\r\n        />\r\n        <div className=\"input-group\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n            value={\r\n              editingAccount ? editingAccount.password : newAccount.password\r\n            }\r\n            onChange={(e) =>\r\n              editingAccount\r\n                ? setEditingAccount({\r\n                    ...editingAccount,\r\n                    password: e.target.value,\r\n                  })\r\n                : setNewAccount({ ...newAccount, password: e.target.value })\r\n            }\r\n            required\r\n          />\r\n          <span\r\n            className=\"toggle-password-visibility\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n          >\r\n            {showPassword ? (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path d=\"M1 1l22 22\" />\r\n                <path d=\"M17.94 17.94A10.94 10.94 0 0 1 12 21C6.48 21 2 16.5 2 12c0-1.39.28-2.73.78-3.94M3.51 3.51C4.72 2.28 6.27 1.51 8 1.51c2.9 0 5.67 1.68 7.93 4.5\" />\r\n              </svg>\r\n            ) : (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n                <path d=\"M22 12c0 4.418-4.477 8-10 8S2 16.418 2 12 6.477 4 12 4s10 3.582 10 8z\" />\r\n              </svg>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <button type=\"submit\">\r\n          {editingAccount ? \"Update Account\" : \"Add Account\"}\r\n        </button>\r\n        {editingAccount && (\r\n          <button type=\"button\" onClick={() => setEditingAccount(null)}>\r\n            Cancel\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}